h1q3_test <- read.csv("h1q3-test-data.csv")
h1q3_train <- read.csv("h1q3-train-data.csv")
View(h1q3_test)
View(h1q3_test)
pred = knn.reg(train=h1q3_train, test=h1q3_test, y="y", k=5)
install.packages("FNN")
pred = FNN::knn.reg(train=h1q3_train, test=h1q3_test, y="y", k=5)
x_test = h1q3_test["x"]
y_test = h1q3_test["y"]
x_train = h1q3_train["x"]
y_train = h1q3_train["y"]
pred = FNN::knn.reg(train=x_train, test=x_test, y=y_train, k=5)
View(pred)
rmse = function(actual, predicted) {
sqrt(mean((actual - predicted) ^ 2))
}
get_rmse = function(model, data, response) {
rmse(actual = subset(data, select = response, drop = TRUE),
predicted = predict(model, data))
}
get_complexity = function(model) {
length(coef(model)) - 1
}
rmse(y_test, pred$pred)
pred = FNN::knn.reg(train=x_train, test=x_test, y=y_train, k=5)$pred
rmse(y_test, pred)
View(y_test)
View(y_test)
y_test - pred
(y_test - pred) ^ 2
mean((y_test - pred) ^ 2)
y_test = h1q3_test$y
pred = FNN::knn.reg(train=x_train, test=x_test, y=y_train, k=5)
rmse(y_test, pred)
mean((y_test - pred) ^ 2)
y_test - pred
rmse = function(actual, predicted) {
sqrt(mean((actual - predicted) ^ 2))
}
h1q3_test <- read.csv("h1q3-test-data.csv")
h1q3_train <- read.csv("h1q3-train-data.csv")
pred = FNN::knn.reg(train = h1q3_test["x"], test = h1q3_test["x"], y = h1q3_test$y, k = 5)$pred
rmse(predicted = pred, actual = h1q3_test$y)
rmse = function(actual, predicted) {
sqrt(mean((actual - predicted) ^ 2))
}
h1q3_test <- read.csv("h1q3-test-data.csv")
h1q3_train <- read.csv("h1q3-train-data.csv")
pred = FNN::knn.reg(train = h1q3_train["x"], test = h1q3_test["x"], y = h1q3_train$y, k = 5)$pred
rmse(predicted = pred, actual = h1q3_test$y)
rmse = function(actual, predicted) {
sqrt(mean((actual - predicted) ^ 2))
}
h1q3_test <- read.csv("h1q3-test-data.csv")
h1q3_train <- read.csv("h1q3-train-data.csv")
pred = FNN::knn.reg(train = h1q3_train["x"], test = h1q3_test["x"], y = h1q3_train$y, k = 5)$pred
rmse(predicted = pred, actual = h1q3_test$y)
k = seq(5, 50, by=5)
k
for (k in seq(5, 50, by=5)) {
cat("k:", k, "\n")
pred = FNN::knn.reg(train = h1q3_train["x"], test = h1q3_test["x"], y = h1q3_train$y, k = k)$pred
rmse(predicted = pred, actual = h1q3_test$y)
}
rmse = function(actual, predicted) {
sqrt(mean((actual - predicted) ^ 2))
}
h1q3_test <- read.csv("h1q3-test-data.csv")
h1q3_train <- read.csv("h1q3-train-data.csv")
for (k in seq(5, 50, by=5)) {
cat("k:", k, "\t")
pred_train = FNN::knn.reg(train = h1q3_train["x"], test = h1q3_test["x"], y = h1q3_train$y, k = k)$pred
train_rmse = rmse(predicted = pred_train, actual = h1q3_test$y)
pred_test = FNN::knn.reg(train = h1q3_train["x"], test = h1q3_train["x"], y = h1q3_train$y, k = k)$pred
test_rmse = rmse(predicted = pred_test, actual = h1q3_test$y)
cat("train rmse:", train_rmse, "\ttest rmse:", test_rmse, "\n")
}
rmse = function(actual, predicted) {
sqrt(mean((actual - predicted) ^ 2))
}
h1q3_test <- read.csv("h1q3-test-data.csv")
h1q3_train <- read.csv("h1q3-train-data.csv")
for (k in seq(5, 50, by=5)) {
cat("k:", k, "\t")
pred_train = FNN::knn.reg(train = h1q3_train["x"], test = h1q3_test["x"], y = h1q3_train$y, k = k)$pred
train_rmse = rmse(predicted = pred_train, actual = h1q3_test$y)
pred_test = FNN::knn.reg(train = h1q3_train["x"], test = h1q3_train["x"], y = h1q3_train$y, k = k)$pred
test_rmse = rmse(predicted = pred_test, actual = h1q3_test$y)
cat("train rmse:", train_rmse, "\ttest rmse:", test_rmse, "\n")
}
rmse = function(actual, predicted) {
sqrt(mean((actual - predicted) ^ 2))
}
h1q3_test <- read.csv("h1q3-test-data.csv")
h1q3_train <- read.csv("h1q3-train-data.csv")
for (k in seq(5, 50, by=5)) {
cat("k:", k, "\t")
pred_train = FNN::knn.reg(train = h1q3_train["x"], test = h1q3_train["x"], y = h1q3_train$y, k = k)$pred
train_rmse = rmse(predicted = pred_train, actual = h1q3_train$y)
pred_test = FNN::knn.reg(train = h1q3_train["x"], test = h1q3_test["x"], y = h1q3_train$y, k = k)$pred
test_rmse = rmse(predicted = pred_test, actual = h1q3_test$y)
cat("train rmse:", train_rmse, "\ttest rmse:", test_rmse, "\n")
}
